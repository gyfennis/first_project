前情回顾

１．　项目开发流程　
　　　需求分析，　概要设计　　详细设计　　测试　　　发布

２．　ｇｉｔ 使用　
　　　
　　　概念　　

　　　基本命令　　add/mv/rm   commit  status  log

     版本控制   reset  reflog  tag

     工作区    stash

     分支管理   branch  checkout   merge

3.  github

    git clone

    git remote add
               rm

    git push


在线词典

1. 需求分析

2. 技术分析

  *  用什么样的并发模型  ： Process多进程并发
  *  网络模型 ： tcp 网络
  *  两个界面怎么配合 : 见 demo.py

  *  数据存储 --》 数据库

     数据库--》 dict
     数据表 ：   其他数据怎么存 ？

         单词表 words --> wid   word    mean

               user  --》uid name   passwd       1

               create table user (id int primary key auto_increment,name char(30) not null,passwd char(64) not null);

               history -->  uid  word   time       多

               create table hist (id int primary key auto_increment,word varchar(30),time datetime default now(),user_id int,constraint user_fk foreign key(user_id) references user(id));


3. 封装和结构设计

   M : 模型 --》 数据处理模型   数据库处理 根据服务端控制模型提出的需求操控数据
   V ：视图 --》 数据展示视图   客户端模块
   C ：控制 --》 逻辑处理控制   服务端并发模型： 接收请求，与客户端交互

   模块划分 --》函数　＋ 类

4. 通信协议

             请求类型    请求参数
   登录       L          name  passwd
   注册       R          name  passwd
   查单词      Q         name  word
   历史记录    H          name
   退出       E


5. 功能模块设计

 框架搭建

 注册

    客户端 ： 输入注册信息
            发送注册请求 （注册信息）
            等待反馈结果
            Yes --> 注册成功
            No --》 注册失败

    服务端 ：  接收请求信息
             判断可否注册
             将判断结果反馈给客户端
             Yes ： 插入用户信息
             No ： 结束


 登录
 查单词
     客户端   输入单词
             发送请求 （Q  name word）
             得到结果 （单词解释或者查找不到）

     服务端   接收请求
             查询单词
             发送结果 （查到了，没查到都发送）
             插入历史记录  name  word  time

 历史记录

 退出

6. 优化完善


二阶段内容梳理

Linux操作系统
    重点 ： Linux操作系统命令
           Linux操作系统结构


数据处理
    文件处理
       重点 ： 文件读写


    数据库处理
       重点 ： 基础语句 （数据库创建，表创建，增删改查）
              表设计   （表关联，索引设计，关联查询）
              概念性知识 （存储过程，事务，表优化..）


网路并发编程
    网络 ：
       重点 ： tcp传输
              udp传输
              理论知识 （TCP/IP模型，三次握手，四次回收）

    进程线程
       重点 ： 进程创建  （进程的理解）
              线程创建  （同步互斥）

    IO
       重点 ： 什么是IO
              IO多路复用方法

    并发模型
       重点 ： 多任务并发
              IO多路服用并发

代码 ：  学生管理系统  （文件处理，正则表达式）
        聊天室        （udp网络，多进程， 总分模型  通信协议）
        ftp文件服务   （多线程并发模型，tcp网络 ， 请求应答机制）
        webserver    （tcp ，http协议，Io多路服用的并发， 功能性的类的设计）
        在线词典      （多进程并发模型，数据库处理，mvc， 总分，通信协议，请求应答，类的设计）

















